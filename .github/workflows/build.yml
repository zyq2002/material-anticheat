name: Build Multi-Platform Flutter App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: 启用 Windows 桌面支持
      run: flutter config --enable-windows-desktop
    
    - name: 验证项目结构
      run: |
        echo "当前工作目录:"
        pwd
        echo "目录内容:"
        dir
        echo "检查pubspec.yaml:"
        if (Test-Path "pubspec.yaml") { echo "pubspec.yaml 存在" } else { echo "pubspec.yaml 不存在" }
      shell: powershell
    
    - name: 获取依赖
      run: flutter pub get
    
    - name: 构建 Windows 应用
      run: flutter build windows --release
    
    - name: 创建 Windows 压缩包
      run: |
        mkdir windows-package
        xcopy build\windows\x64\runner\Release windows-package\ /E /I
        Compress-Archive -Path windows-package\* -DestinationPath 物资反作弊工具-Windows-x64.zip
      shell: powershell
    
    - name: 上传 Windows 构建产物
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: 物资反作弊工具-Windows-x64.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: 启用 macOS 桌面支持
      run: flutter config --enable-macos-desktop
    
    - name: 获取依赖
      run: flutter pub get
    
    - name: 构建 macOS 应用
      run: flutter build macos --release
    
    - name: 创建 macOS 压缩包
      run: |
        cd build/macos/Build/Products/Release
        zip -r "../../../../../物资反作弊工具-macOS.zip" material_anticheat.app
    
    - name: 上传 macOS 构建产物
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: 物资反作弊工具-macOS.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
    
    - name: 安装 Linux 依赖
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
        
    - name: 启用 Linux 桌面支持
      run: flutter config --enable-linux-desktop
    
    - name: 获取依赖
      run: flutter pub get
    
    - name: 构建 Linux 应用
      run: flutter build linux --release
    
    - name: 创建 Linux 压缩包
      run: |
        cd build/linux/x64/release/bundle
        tar -czf "../../../../../物资反作弊工具-Linux-x64.tar.gz" ./*
    
    - name: 上传 Linux 构建产物
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: 物资反作弊工具-Linux-x64.tar.gz

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v4
    
    - name: 获取当前日期
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    
    - name: 创建发布版本
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.date.outputs.date }}-${{ github.run_number }}
        name: 物资反作弊工具 v${{ steps.date.outputs.date }}
        body: |
          🚀 自动构建版本
          
          ## 包含平台
          - ✅ Windows x64
          - ✅ macOS (Intel & Apple Silicon)
          - ✅ Linux x64
          
          ## 主要功能
          - 单日图片下载
          - 批量多日下载
          - 图片库查看
          - 下载速度控制
          
          ## 使用说明
          1. 下载对应平台的压缩包
          2. 解压后运行应用程序
          3. 输入认证信息开始使用
          
          构建时间: ${{ steps.date.outputs.date }}
          构建号: ${{ github.run_number }}
        files: |
          windows-build/物资反作弊工具-Windows-x64.zip
          macos-build/物资反作弊工具-macOS.zip
          linux-build/物资反作弊工具-Linux-x64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 